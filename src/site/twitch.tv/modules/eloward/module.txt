EloWard 7TV Module - Goal and Architecture Overview
==================================================

PROJECT GOAL
============

The EloWard 7TV module displays League of Legends rank badges next to usernames in Twitch chat. It provides a lightweight, badge-only experience that integrates natively with 7TV's existing badge system and styling.

PRIMARY OBJECTIVES
==================

1. **Badge Display**: Display League of Legends rank badges next to usernames in Twitch chat
2. **Game-Aware Activation**: Only show badges when watching League of Legends streams
3. **Performance Optimized**: Efficient caching and minimal API calls for smooth performance
4. **Native 7TV Integration**: Seamlessly integrate with 7TV's existing badge system and styling
5. **Simplified User Experience**: One-click enable/disable with minimal configuration

TECHNICAL ARCHITECTURE
======================

CORE COMPONENTS
---------------

1. **EloWardModule.vue**: Main entry point that declares the module and manages dependencies
2. **useEloWardRanks.ts**: Core composable handling API calls, caching, and rank data management
3. **useGameDetection.ts**: Detects League of Legends streams using Twitch's game information
4. **EloWardBadge.vue**: Badge component for displaying rank images
5. **EloWardTooltip.vue**: Tooltip component showing detailed rank information

API INTEGRATION
---------------

- **Endpoint**: `https://eloward-ranks.unleashai.workers.dev/api/ranks/lol/{username}`
- **Method**: GET requests for rank data
- **Response**: JSON with rank_tier, rank_division, lp, riot_id, region, animate_badge
- **Animate Badge Logic**: Backend processes animate_badge as boolean (requires plus_active AND animate_badge)
- **Caching**: LRU cache with 1-hour positive cache, 15-minute negative cache
- **Error Handling**: Graceful degradation on API failures

PERFORMANCE OPTIMIZATIONS
=========================

CACHING STRATEGY
-----------------
- **LRU Cache**: Least Recently Used eviction with access counting
- **Dual Cache Duration**: 1 hour for successful lookups, 15 minutes for failed lookups
- **Request Deduplication**: Prevents duplicate API calls for the same username
- **Memory Management**: Automatic cleanup of pending requests and cache entries

EFFICIENCY MEASURES
-------------------
- **Immediate Display**: Cache-first approach for instant badge display
- **Non-blocking API**: Async API calls don't block UI rendering
- **7TV Integration**: Uses 7TV's tooltip system and badge infrastructure
- **Minimal Re-renders**: Efficient Vue reactivity with direct config access
- **Smart Cleanup**: Cache cleared when switching channels or disabling module

GAME DETECTION SYSTEM
====================

AUTOMATIC DETECTION
-------------------
- **Game ID**: Detects League of Legends using game ID `21779`
- **Game Name**: Fallback detection using "League of Legends" string matching
- **Stream Monitoring**: Watches for game changes and updates badge visibility
- **Channel Switching**: Automatically detects game when switching between channels

CONFIGURATION OPTIONS
=====================

USER SETTINGS
-------------
- **Enable EloWard Rank Badges**: Master toggle for the entire feature
- **Game-Aware Display**: Only show badges on League of Legends streams (default: enabled)
- **Animated Badges**: Backend-controlled animated WebP badges for premium users
- **Tooltip Display**: Show detailed rank information on hover using 7TV's tooltip system

INTEGRATION POINTS
==================

7TV BADGE SYSTEM
----------------
- **Native Integration**: Uses 7TV's existing badge infrastructure and styling
- **Badge Container**: Integrates with 7TV's `seventv-chat-user-badge-list` container
- **Tooltip System**: Uses 7TV's `useTooltip` composable for consistent tooltip behavior
- **Theme Support**: Automatic dark/light theme support through 7TV's CSS variables

USERTAG COMPONENT
-----------------
- **Primary Integration**: Main integration point with 7TV's UserTag component
- **Badge Placement**: Adds EloWard badges alongside existing Twitch and 7TV badges
- **Responsive Design**: Adapts to different chat layouts and themes

USER EXPERIENCE FLOW
====================

TYPICAL USER JOURNEY
--------------------
1. **Installation**: User installs 7TV extension with EloWard module
2. **Activation**: User enables EloWard in 7TV settings (one-click toggle)
3. **Automatic Detection**: Module detects League of Legends streams automatically
4. **Badge Display**: Rank badges appear next to usernames in chat
5. **Interaction**: Users can hover for tooltips or click badges to open OP.GG profiles

SIMPLE SETUP
------------
- **No Account Linking**: Works without any authentication or account connections
- **No Configuration**: Works out-of-the-box with sensible defaults
- **No Data Storage**: No personal data stored locally (only public rank data cached)
- **No Privacy Concerns**: Only fetches publicly available rank information

DEVELOPMENT PHILOSOPHY
======================

SIMPLICITY FIRST
----------------
- **Single Purpose**: Focus exclusively on badge display
- **Minimal Dependencies**: Leverage existing 7TV infrastructure
- **Clean Code**: TypeScript with proper interfaces and separation of concerns
- **Maintainable**: Clear architecture with composables and components

PERFORMANCE FOCUSED
-------------------
- **Instant Display**: Cache-first approach provides immediate badge display
- **Efficient Caching**: Smart LRU cache management to minimize API calls
- **Memory Conscious**: Automatic cleanup and request deduplication
- **7TV Native**: Leverages 7TV's infrastructure for optimal performance
- **Resource Light**: Minimal impact on 7TV extension performance

USER-CENTRIC DESIGN
-------------------
- **Zero Friction**: Enable and forget - no complex setup
- **Intuitive**: Badges appear automatically when appropriate
- **Informative**: Rich tooltips with detailed rank information
- **Accessible**: Works across different themes and layouts

FUTURE CONSIDERATIONS
=====================

POTENTIAL ENHANCEMENTS
----------------------
- **Additional Games**: Support for other competitive games beyond League of Legends
- **Custom Badge Styles**: User-configurable badge appearances
- **Advanced Filtering**: Options to show/hide specific ranks
- **Analytics**: Optional usage statistics and performance metrics

MAINTENANCE STRATEGY
--------------------
- **API Compatibility**: Monitor EloWard API changes and adapt accordingly
- **7TV Updates**: Ensure compatibility with 7TV extension updates
- **Performance Monitoring**: Track cache hit rates and API usage
- **User Feedback**: Collect and implement user-requested improvements

CONCLUSION
==========

The EloWard 7TV module provides a focused, streamlined approach to displaying League of Legends rank badges in Twitch chat. By focusing purely on badge display and integrating seamlessly with 7TV's existing infrastructure, it delivers a simple, performant solution that enhances the Twitch viewing experience for League of Legends fans.

The module's success depends on its ability to provide value through simple badge display while maintaining excellent performance and user experience. By keeping the scope narrow and the implementation focused, it can deliver a reliable, efficient solution that integrates naturally with 7TV's modern Vue.js architecture and robust caching systems.
